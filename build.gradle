buildscript {
    ext {
        springBootVersion = '1.2.4.RELEASE'
    }
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}") 
        classpath("io.spring.gradle:dependency-management-plugin:0.5.1.RELEASE")
    }
}

apply plugin: 'groovy'
apply plugin: 'eclipse'
apply plugin: 'spring-boot' 
apply plugin: 'io.spring.dependency-management' 

jar {
    baseName = 'demo'
    version = '0.0.1-SNAPSHOT'
}
sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
	mavenCentral()
    maven { url 'http://repo.spring.io/libs-snapshot' }
}


dependencies {
    compile     'org.codehaus.groovy:groovy'
    compile     'org.springframework.boot:spring-boot-starter-web'
    
    testCompile 'org.springframework.boot:spring-boot-starter-test'
    
    compile     'org.springframework.data:spring-data-neo4j:4.0.0.BUILD-SNAPSHOT'
    testCompile 'org.springframework.data:spring-data-neo4j:4.0.0.BUILD-SNAPSHOT:tests'
    
    compile     'org.neo4j.app:neo4j-server:2.2.2'
    testCompile 'org.neo4j.app:neo4j-server:2.2.2:tests'
    testCompile 'org.neo4j:neo4j-kernel:2.2.2:tests'
    testCompile 'org.neo4j:neo4j-io:2.2.2:tests'
	testCompile 'org.neo4j:neo4j-ogm-test:1.1.0.BUILD-SNAPSHOT:tests'
}


eclipse {
    classpath {
         containers.remove('org.eclipse.jdt.launching.JRE_CONTAINER')
         containers 'org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.8'
    }
}

task wrapper(type: Wrapper) {
    gradleVersion = '2.3'
}
